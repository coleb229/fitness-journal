// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model DailyLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      DateTime @default(now())
  calories  Int
  fat       Int
  protein   Int
  carbs     Int
  abs       Boolean
  cardio    Boolean
  training  String
  tFat      Int
  tProtein  Int
  tCarbs    Int
  tCalories Int
  weight    Float
  notes     String
  user      String

  @@unique([date, user]) // This is a composite unique constraint (this makes sure that a user cant create a new log for the same day)
}

model UserPreferences {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  user      String @unique
  tFat      Int    @default(0)
  tProtein  Int    @default(0)
  tCarbs    Int    @default(0)
  tCalories Int    @default(0)
  goal      String @default("maintain")
}

model Training {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  exercise    String
  weight      Int
  tenByThree  Boolean @default(false)
  sevenByFive Boolean @default(false)
  fiveBySeven Boolean @default(false)
  user        String
}

model Goal {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   String
  goal   String
  target Int

  @@unique([user, goal])
}

model Recipe {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  ingredients  String[]
  instructions String[]
  calories     Int
  fat          Int
  protein      Int
  carbs        Int
  serving      Int
  user         String

  @@unique([name, user])
}
